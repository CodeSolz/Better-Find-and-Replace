/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/pagePostFiltersOptions.js":
/*!******************************************!*\
  !*** ./src/js/pagePostFiltersOptions.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar $ = jQuery;\nvar pagePostFiltersOptions = {\n  pagePostOptions: function pagePostOptions(type) {\n    this.getOptions(type);\n    // console.log( type + ' loaded');\n  },\n  getOptions: function getOptions(option_type) {\n    var action = $(\"#cs_field_action\").val();\n    if (typeof action === \"undefined\" || action.length == 0) {\n      action = \"rtafar_ajax\";\n    }\n\n    //get page / post options list\n    var formDataUrls = new FormData();\n    formDataUrls.append(\"action\", action);\n    formDataUrls.append(\"cs_token\", $(\"#cs_token\").val());\n    formDataUrls.append(\"method\", repndb.ppoptn);\n    formDataUrls.append(\"option_type\", option_type);\n    $.ajax({\n      url: ajaxurl,\n      type: \"POST\",\n      data: formDataUrls,\n      contentType: false,\n      cache: false,\n      processData: false\n    }).done(function (data) {\n      var optns = '';\n      for (var _i = 0, _Object$entries = Object.entries(data.urls); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          value = _Object$entries$_i[1];\n        var isPro = '';\n        if (true === key.includes('disabled')) {\n          isPro = 'disabled = \"disabled\"';\n        }\n        optns += \"<option value=\\\"\".concat(key, \"\\\" \").concat(isPro, \">\").concat(value, \"</option>\");\n      }\n      $(\".page-post-filters\").html(optns);\n      $('.page-post-filters').select2();\n    }).fail(function (errorThrown) {\n      console.log(\"Error: \" + errorThrown.responseText);\n    });\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pagePostFiltersOptions);\n\n//# sourceURL=webpack://real-time-auto-find-and-replace/./src/js/pagePostFiltersOptions.js?");

/***/ }),

/***/ "./src/js/pageReplaceInDb.js":
/*!***********************************!*\
  !*** ./src/js/pageReplaceInDb.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pagePostFiltersOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pagePostFiltersOptions */ \"./src/js/pagePostFiltersOptions.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\njQuery(document).ready(function ($) {\n  setTimeout(function () {\n    //get tables list\n    var formData = new FormData();\n    var action = $(\"#cs_field_action\").val();\n    if (typeof action === \"undefined\" || action.length == 0) {\n      action = \"rtafar_ajax\";\n    }\n    formData.append(\"action\", action);\n    formData.append(\"cs_token\", $(\"#cs_token\").val());\n    formData.append(\"method\", repndb.mgt);\n    $.ajax({\n      url: ajaxurl,\n      type: \"POST\",\n      data: formData,\n      contentType: false,\n      cache: false,\n      processData: false\n    }).done(function (data) {\n      var optns = '';\n      for (var _i = 0, _Object$entries = Object.entries(data.tables); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          value = _Object$entries$_i[1];\n        var isPro = '';\n        if (true === key.includes('disabled')) {\n          isPro = 'disabled = \"disabled\"';\n        }\n        optns += \"<option value=\\\"\".concat(key, \"\\\" \").concat(isPro, \">\").concat(value, \"</option>\");\n      }\n      $(\".db-tables\").html(optns);\n      $('.db-tables').select2();\n    }).fail(function (errorThrown) {\n      console.log(\"Error: \" + errorThrown.responseText);\n    });\n\n    //get urls list\n    var formDataUrls = new FormData();\n    formDataUrls.append(\"action\", action);\n    formDataUrls.append(\"cs_token\", $(\"#cs_token\").val());\n    formDataUrls.append(\"method\", repndb.mgurls);\n    $.ajax({\n      url: ajaxurl,\n      type: \"POST\",\n      data: formDataUrls,\n      contentType: false,\n      cache: false,\n      processData: false\n    }).done(function (data) {\n      var optns = '';\n      for (var _i2 = 0, _Object$entries2 = Object.entries(data.urls); _i2 < _Object$entries2.length; _i2++) {\n        var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n          key = _Object$entries2$_i[0],\n          value = _Object$entries2$_i[1];\n        var isPro = '';\n        if (true === key.includes('disabled')) {\n          isPro = 'disabled = \"disabled\"';\n        }\n        optns += \"<option value=\\\"\".concat(key, \"\\\" \").concat(isPro, \">\").concat(value, \"</option>\");\n      }\n      $(\".in-which-url\").html(optns);\n      $('.in-which-url').select2();\n    }).fail(function (errorThrown) {\n      console.log(\"Error: \" + errorThrown.responseText);\n    });\n  }, 150);\n\n  //select - unselect all tables\n  $('body').on(\"select2:select\", '.db-tables', function (e) {\n    var data = e.params.data.text;\n    if (data == 'Select All') {\n      $(\".db-tables > option:enabled\").prop(\"selected\", \"selected\");\n      $(\".db-tables > option:contains(Unselect All)\").prop('selected', false);\n      $(\".db-tables > option:contains(Select All)\").prop('selected', false);\n      $(\".db-tables\").trigger(\"change\");\n    } else if (data == 'Unselect All') {\n      $(\".db-tables > option:enabled\").prop(\"selected\", \"\");\n      $(\".db-tables\").trigger(\"change\");\n    }\n  });\n\n  //select - unselect all urls\n  $('body').on(\"select2:select\", '.in-which-url', function (e) {\n    var data = e.params.data.text;\n    if (data == 'Select All') {\n      $(\".in-which-url > option:enabled\").prop(\"selected\", \"selected\");\n      $(\".in-which-url > option:contains(Unselect All)\").prop('selected', false);\n      $(\".in-which-url > option:contains(Select All)\").prop('selected', false);\n      $(\".in-which-url\").trigger(\"change\");\n    } else if (data == 'Unselect All') {\n      $(\".in-which-url > option:enabled\").prop(\"selected\", \"\");\n      $(\".in-which-url\").trigger(\"change\");\n    }\n  });\n\n  //select - page / post options\n  $('body').on(\"select2:select\", '.page-post-filters', function (e) {\n    var data = e.params.data.text;\n    if (data == 'Select All') {\n      $(\".page-post-filters > option:enabled\").prop(\"selected\", \"selected\");\n      $(\".page-post-filters > option:contains(Unselect All)\").prop('selected', false);\n      $(\".page-post-filters > option:contains(Select All)\").prop('selected', false);\n      $(\".page-post-filters\").trigger(\"change\");\n    } else if (data == 'Unselect All') {\n      $(\".page-post-filters > option:enabled\").prop(\"selected\", \"\");\n      $(\".page-post-filters\").trigger(\"change\");\n    }\n  });\n\n  //where to replace switcher\n  jQuery(\"body\").on('change', '.where-to-replace', function () {\n    var currVal = jQuery(this).val();\n    if (currVal === 'tables') {\n      jQuery(\".url-options\").addClass('force-hidden');\n      jQuery(\".db-tables-wrap\").removeClass('force-hidden');\n      jQuery(\".in-which-url\").removeAttr('required');\n      jQuery(\".db-tables\").attr('required', 'required');\n      jQuery(\".page-post-filters-wrap\").addClass('force-hidden');\n    } else if (currVal === 'urls') {\n      jQuery(\".url-options\").removeClass('force-hidden');\n      jQuery(\".db-tables-wrap\").addClass('force-hidden');\n      jQuery(\".in-which-url\").attr('required', 'required');\n      jQuery(\".db-tables\").removeAttr('required');\n      jQuery(\".page-post-filters-wrap\").addClass('force-hidden');\n    } else if (currVal === 'page' || currVal === 'post') {\n      jQuery(\".url-options\").addClass('force-hidden');\n      jQuery(\".db-tables-wrap\").addClass('force-hidden');\n      jQuery(\".page-post-filters-wrap\").removeClass('force-hidden');\n      jQuery(\".in-which-url\").removeAttr('required');\n      jQuery(\".db-tables\").removeAttr('required');\n      // console.log('page');\n\n      //get page options\n      _pagePostFiltersOptions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pagePostOptions(currVal);\n    }\n    if (typeof rtafr.is_pro_activate !== 'undefined' && rtafr.is_pro_activate != '') {\n      if (currVal === 'tables') {\n        jQuery(\".large-table\").removeClass('force-hidden');\n      } else if (currVal === 'urls' || currVal === 'page' || currVal === 'posts') {\n        jQuery(\".large-table\").addClass('force-hidden');\n      }\n    }\n\n    // $('.db-tables, .in-which-url').select2();\n  });\n});\n\n//# sourceURL=webpack://real-time-auto-find-and-replace/./src/js/pageReplaceInDb.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/pageReplaceInDb.js");
/******/ 	
/******/ })()
;